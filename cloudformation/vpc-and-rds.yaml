AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC with EC2 in Private Subnet and RDS in Private Subnet'

Resources:
  # VPC
  AssignmentVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: AssignmentVPC

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref AssignmentVPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnet
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AssignmentVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AssignmentVPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-1b
      Tags:
        - Key: Name
          Value: PublicSubnet2

  # Private Subnet
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AssignmentVPC
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: PrivateSubnet1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AssignmentVPC
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: us-east-1b
      Tags:
        - Key: Name
          Value: PrivateSubnet2

  # Route Table for Public Subnet
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AssignmentVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetIds: 
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow traffic only from CloudFront and SSH"
      VpcId: !Ref AssignmentVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          # SourceSecurityGroupId: !Ref ALBSecurityGroup
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # Temporarily allow SSH for management
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0  # Allow outbound traffic

  # Security Group for RDS
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow MySQL access from EC2"
      VpcId: !Ref AssignmentVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2SecurityGroup

  # EC2 Instance
  # MyEC2Instance:
  #   Type: AWS::EC2::Instance
  #   Properties:
  #     InstanceType: t3.micro
  #     ImageId: ami-0c55b159cbfafe1f0  # Replace with the correct AMI ID
  #     SubnetId: !Ref PublicSubnet
  #     SecurityGroupIds:
  #       - !Ref EC2SecurityGroup
  #     AssociatePublicIpAddress: true  # Required for CloudFront to reach EC2
  #     Tags:
  #       - Key: Name
  #         Value: MyPrivateEC2

    # RDS Subnet Group
  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "RDS Subnet Group"
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: RDSSubnetGroup

    # RDS Database (Private)
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: db-finance-app-assignment
      AllocatedStorage: 100
      StorageType: gp2
      DBInstanceClass: db.t3.small
      Engine: mysql
      EngineVersion: "8.0.40"
      DBName: FinanceApp
      MasterUsername: admin
      MasterUserPassword: changemelater # Change later
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref RDSSubnetGroup
      MultiAZ: false  # Single AZ deployment because sandbox doesnt support multi-AZ
      PubliclyAccessible: false # Makes RDS Private
      BackupRetentionPeriod: 7
      DeletionProtection: true


